{"version":3,"sources":["file:///E:/cocos/cocos-awesome-tech-solutions/demo/Creator3.6.0_Raphael/assets/demo/animate-dash-line.ts"],"names":["_decorator","Component","Vec2","Color","director","RPath","ccclass","property","AnimateDashLine","path","time","pathLength","onLoad","addComponent","strokeColor","WHITE","lineWidth","fillColor","scale","pathStrings","getDemoData","i","self","animate","pathString","center","length","getTotalLength","dashOffset","dashArray","schedule","duration","update","dt","percent","_dirty","backToList","loadScene"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;;AAE1CC,MAAAA,K,iBAAAA,K;;;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;iCAGjBQ,e,WADZF,OAAO,CAAC,iBAAD,C,2BAAR,MACaE,eADb,SACqCP,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA,eAG3CQ,IAH2C,GAGpC,IAHoC;AAAA,eAI3CC,IAJ2C,GAIpC,CAJoC;AAAA,eAK3CC,UAL2C,GAK9B,CAL8B;AAAA;;AAM3CC,QAAAA,MAAM,GAAG;AACL,cAAIH,IAAI,GAAG,KAAKI,YAAL;AAAA;AAAA,6BAAX;AACAJ,UAAAA,IAAI,CAACK,WAAL,GAAmBX,KAAK,CAACY,KAAzB;AACAN,UAAAA,IAAI,CAACO,SAAL,GAAiB,CAAjB;AACAP,UAAAA,IAAI,CAACQ,SAAL,GAAiB,MAAjB;AACAR,UAAAA,IAAI,CAACS,KAAL,GAAa,IAAIhB,IAAJ,CAAS,CAAT,EAAY,CAAC,CAAb,CAAb;AACA,eAAKO,IAAL,GAAYA,IAAZ;AACA,cAAIU,WAAW,GAAGV,IAAI,CAACW,WAAL,EAAlB;AACA,cAAIC,CAAC,GAAG,CAAR;AACA,cAAIC,IAAI,GAAG,IAAX;;AACA,mBAASC,OAAT,GAAmB;AACf,gBAAIC,UAAU,GAAGL,WAAW,CAACE,CAAD,CAA5B;AACAZ,YAAAA,IAAI,CAACA,IAAL,CAAUe,UAAV;AACAf,YAAAA,IAAI,CAACgB,MAAL,CAAY,CAAZ,EAAe,CAAf;AACAJ,YAAAA,CAAC,GAAG,EAAEA,CAAF,GAAMF,WAAW,CAACO,MAAtB;AACAJ,YAAAA,IAAI,CAACZ,IAAL,GAAY,CAAZ;AACAY,YAAAA,IAAI,CAACX,UAAL,GAAkBF,IAAI,CAACkB,cAAL,EAAlB;AACAlB,YAAAA,IAAI,CAACmB,UAAL,GAAkBN,IAAI,CAACX,UAAvB;AACAF,YAAAA,IAAI,CAACoB,SAAL,GAAiB,CAACP,IAAI,CAACX,UAAN,CAAjB;AACH;;AACDY,UAAAA,OAAO;AACP,eAAKO,QAAL,CAAcP,OAAd,EAAuB,KAAKQ,QAAL,GAAgB,GAAhB,GAAsB,IAA7C;AACH;;AAEDC,QAAAA,MAAM,CAACC,EAAD,EAAU;AACZ,eAAKvB,IAAL,IAAauB,EAAb;AACA,cAAIC,OAAO,GAAG,KAAKxB,IAAL,GAAY,KAAKqB,QAA/B;;AACA,cAAIG,OAAO,GAAG,CAAd,EAAiB;AACb;AACH;;AACD,eAAKzB,IAAL,CAAUmB,UAAV,GAAuB,KAAKjB,UAAL,IAAmB,IAAIuB,OAAvB,CAAvB;AACA,eAAKzB,IAAL,CAAU0B,MAAV,GAAmB,IAAnB;AACH;;AAEDC,QAAAA,UAAU,GAAE;AACRhC,UAAAA,QAAQ,CAACiC,SAAT,CAAmB,UAAnB;AACH;;AA1C0C,O,2EAC1C9B,Q;;;;;iBACiB,C","sourcesContent":["import { _decorator, Component, Vec3, Vec2, Color, director } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { RPath } from '../raphael/RPath';\r\n@ccclass('AnimateDashLine')\r\nexport class AnimateDashLine extends Component {\r\n    @property\r\n    public duration = 2;\r\n    path = null;\r\n    time = 0;\r\n    pathLength = 0;\r\n    onLoad() {\r\n        let path = this.addComponent(RPath);\r\n        path.strokeColor = Color.WHITE;\r\n        path.lineWidth = 4;\r\n        path.fillColor = 'none';\r\n        path.scale = new Vec2(4, -4);\r\n        this.path = path;\r\n        let pathStrings = path.getDemoData();\r\n        let i = 0;\r\n        let self = this;\r\n        function animate() {\r\n            let pathString = pathStrings[i];\r\n            path.path(pathString);\r\n            path.center(0, 0);\r\n            i = ++i % pathStrings.length;\r\n            self.time = 0;\r\n            self.pathLength = path.getTotalLength();\r\n            path.dashOffset = self.pathLength;\r\n            path.dashArray = [self.pathLength];\r\n        }\r\n        animate();\r\n        this.schedule(animate, this.duration * 1.5 * 1000);\r\n    }\r\n\r\n    update(dt: any) {\r\n        this.time += dt;\r\n        let percent = this.time / this.duration;\r\n        if (percent > 1) {\r\n            return;\r\n        }\r\n        this.path.dashOffset = this.pathLength * (1 - percent);\r\n        this.path._dirty = true;\r\n    }\r\n\r\n    backToList(){\r\n        director.loadScene('TestList');\r\n    }\r\n}\r\n\r\n"]}