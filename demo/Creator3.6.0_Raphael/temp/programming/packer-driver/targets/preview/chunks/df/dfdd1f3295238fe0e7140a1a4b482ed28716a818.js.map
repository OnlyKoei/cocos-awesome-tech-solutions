{"version":3,"sources":["file:///E:/cocos/cocos-awesome-tech-solutions/demo/Creator3.6.0_Raphael/assets/raphael/utils/R.curve.ts"],"names":["path2absolute","path2curve","clone","obj","Object","res","constructor","key","has","pathCommand","pathValues","concat","apply","split","toFloat","parseFloat","mmax","Math","max","mmin","min","PI","abs","math","pow","upperCase","String","prototype","toUpperCase","cache","string2curve","string2path","a2c","x1","y1","rx","ry","angle","large_arc_flag","sweep_flag","x2","y2","recursive","_120","rad","xy","rotate","x","y","X","cos","sin","Y","h","sqrt","rx2","ry2","k","cx","cy","f1","asin","Number","toFixed","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","t","tan","hx","hy","m1","m2","m3","m4","join","newres","i","ii","length","l2c","q2c","ax","ay","_13","_23","parsePathString","pathString","paramCounts","a","c","l","m","r","q","s","v","z","data","replace","b","params","name","toLowerCase","push","splice","path2absoluteFunc","pathArray","mx","my","start","crz","pa","call","dots","slice","j","jj","pop","catmullRom2bezier","kk","path2curveFunc","pathString2","p","p2","attrs","bx","by","qx","qy","attrs2","processPath","path","d","pcom","nx","ny","tq","T","Q","fixArc","pp","shift","pi","pcoms1","pcoms2","fixM","path1","path2","a1","a2","pfirst","seg","seg2","seglen","seg2len"],"mappings":"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","sourcesContent":["\r\nvar pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\r\nvar pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\r\n\r\nvar concat = 'concat';\r\nvar apply = 'apply';\r\nvar split = 'split';\r\nvar has = 'hasOwnProperty';\r\n\r\nvar toFloat = parseFloat;\r\n\r\nvar mmax = Math.max;\r\nvar mmin = Math.min;\r\nvar PI = Math.PI;\r\nvar abs = Math.abs;\r\nvar math = Math;\r\nvar pow = Math.pow;\r\n\r\nvar upperCase = String.prototype.toUpperCase;\r\n\r\nvar cache = {\r\n    string2curve: {},\r\n    string2path: {}\r\n};\r\n\r\nfunction clone(obj) {\r\n    if (typeof obj === 'function' || Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    var res = new obj.constructor();\r\n    for (var key in obj) if (obj[has](key)) {\r\n        res[key] = clone(obj[key]);\r\n    }\r\n    return res;\r\n}\r\n\r\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n    // for more information of where this math came from visit:\r\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n    var _120 = PI * 120 / 180,\r\n        rad = PI / 180 * (+angle || 0),\r\n        res = [],\r\n        xy,\r\n        rotate = function (x, y, rad) {\r\n            var X = x * math.cos(rad) - y * math.sin(rad),\r\n                Y = x * math.sin(rad) + y * math.cos(rad);\r\n            return { x: X, y: Y };\r\n        };\r\n    if (!recursive) {\r\n        xy = rotate(x1, y1, -rad);\r\n        x1 = xy.x;\r\n        y1 = xy.y;\r\n        xy = rotate(x2, y2, -rad);\r\n        x2 = xy.x;\r\n        y2 = xy.y;\r\n        var cos = math.cos(PI / 180 * angle),\r\n            sin = math.sin(PI / 180 * angle),\r\n            x = (x1 - x2) / 2,\r\n            y = (y1 - y2) / 2;\r\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n        if (h > 1) {\r\n            h = math.sqrt(h);\r\n            rx = h * rx;\r\n            ry = h * ry;\r\n        }\r\n        var rx2 = rx * rx,\r\n            ry2 = ry * ry,\r\n            k = (large_arc_flag === sweep_flag ? -1 : 1) *\r\n                math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n            cx = k * rx * y / ry + (x1 + x2) / 2,\r\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n            f1 = math.asin(Number(((y1 - cy) / ry).toFixed(9))),\r\n            f2 = math.asin(Number(((y2 - cy) / ry).toFixed(9)));\r\n\r\n        f1 = x1 < cx ? PI - f1 : f1;\r\n        f2 = x2 < cx ? PI - f2 : f2;\r\n        f1 < 0 && (f1 = PI * 2 + f1);\r\n        f2 < 0 && (f2 = PI * 2 + f2);\r\n        if (sweep_flag && f1 > f2) {\r\n            f1 = f1 - PI * 2;\r\n        }\r\n        if (!sweep_flag && f2 > f1) {\r\n            f2 = f2 - PI * 2;\r\n        }\r\n    } else {\r\n        f1 = recursive[0];\r\n        f2 = recursive[1];\r\n        cx = recursive[2];\r\n        cy = recursive[3];\r\n    }\r\n    var df = f2 - f1;\r\n    if (abs(df) > _120) {\r\n        var f2old = f2,\r\n            x2old = x2,\r\n            y2old = y2;\r\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n        x2 = cx + rx * math.cos(f2);\r\n        y2 = cy + ry * math.sin(f2);\r\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n    }\r\n    df = f2 - f1;\r\n    var c1 = math.cos(f1),\r\n        s1 = math.sin(f1),\r\n        c2 = math.cos(f2),\r\n        s2 = math.sin(f2),\r\n        t = math.tan(df / 4),\r\n        hx = 4 / 3 * rx * t,\r\n        hy = 4 / 3 * ry * t,\r\n        m1 = [x1, y1],\r\n        m2 = [x1 + hx * s1, y1 - hy * c1],\r\n        m3 = [x2 + hx * s2, y2 - hy * c2],\r\n        m4 = [x2, y2];\r\n    m2[0] = 2 * m1[0] - m2[0];\r\n    m2[1] = 2 * m1[1] - m2[1];\r\n    if (recursive) {\r\n        return [m2, m3, m4][concat](res);\r\n    } else {\r\n        res = [m2, m3, m4][concat](res).join()[split](',');\r\n        var newres = [];\r\n        for (var i = 0, ii = res.length; i < ii; i++) {\r\n            newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n        }\r\n        return newres;\r\n    }\r\n};\r\n\r\nvar l2c = function (x1, y1, x2, y2) {\r\n    return [x1, y1, x2, y2, x2, y2];\r\n};\r\n\r\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\r\n    var _13 = 1 / 3,\r\n        _23 = 2 / 3;\r\n    return [\r\n        _13 * x1 + _23 * ax,\r\n        _13 * y1 + _23 * ay,\r\n        _13 * x2 + _23 * ax,\r\n        _13 * y2 + _23 * ay,\r\n        x2,\r\n        y2\r\n    ];\r\n};\r\n\r\nvar parsePathString = function (pathString) {\r\n    if (!pathString) {\r\n        return null;\r\n    }\r\n\r\n    if (typeof pathString !== 'string') {\r\n        return pathString;\r\n    }\r\n\r\n    if (cache.string2path[pathString]) {\r\n        return clone(cache.string2path[pathString]);\r\n    }\r\n\r\n    var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 },\r\n        data = [];\r\n\r\n    //@ts-ignore\r\n    String(pathString).replace(pathCommand, function (a, b, c) {\r\n        var params = [],\r\n            name = b.toLowerCase();\r\n        c.replace(pathValues, function (a, b) {\r\n            b && params.push(+b);\r\n        });\r\n        if (name === 'm' && params.length > 2) {\r\n            data.push([b][concat](params.splice(0, 2)));\r\n            name = 'l';\r\n            b = b === 'm' ? 'l' : 'L';\r\n        }\r\n        if (name === 'r') {\r\n            data.push([b][concat](params));\r\n        } else while (params.length >= paramCounts[name]) {\r\n            data.push([b][concat](params.splice(0, paramCounts[name])));\r\n            if (!paramCounts[name]) {\r\n                break;\r\n            }\r\n        }\r\n    });\r\n\r\n    return data;\r\n};\r\nexport class path2absolute {\r\n    path2absoluteFunc(pathString) {\r\n        var pathArray = parsePathString(pathString);\r\n        var res = [],\r\n            x = 0,\r\n            y = 0,\r\n            mx = 0,\r\n            my = 0,\r\n            start = 0;\r\n        if (pathArray[0][0] == 'M') {\r\n            x = +pathArray[0][1];\r\n            y = +pathArray[0][2];\r\n            mx = x;\r\n            my = y;\r\n            start++;\r\n            res[0] = ['M', x, y];\r\n        }\r\n        var crz = pathArray.length == 3 && pathArray[0][0] == 'M' && pathArray[1][0].toUpperCase() == 'R' && pathArray[2][0].toUpperCase() == 'Z';\r\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n            res.push(r = []);\r\n            pa = pathArray[i];\r\n            if (pa[0] != upperCase.call(pa[0])) {\r\n                r[0] = upperCase.call(pa[0]);\r\n                switch (r[0]) {\r\n                    case 'A':\r\n                        r[1] = pa[1];\r\n                        r[2] = pa[2];\r\n                        r[3] = pa[3];\r\n                        r[4] = pa[4];\r\n                        r[5] = pa[5];\r\n                        r[6] = +(pa[6] + x);\r\n                        r[7] = +(pa[7] + y);\r\n                        break;\r\n                    case 'V':\r\n                        r[1] = +pa[1] + y;\r\n                        break;\r\n                    case 'H':\r\n                        r[1] = +pa[1] + x;\r\n                        break;\r\n                    case 'R':\r\n                        var dots = [x, y][concat](pa.slice(1));\r\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\r\n                            dots[j] = +dots[j] + x;\r\n                            dots[++j] = +dots[j] + y;\r\n                        }\r\n                        res.pop();\r\n                        res = res[concat](catmullRom2bezier(dots, crz));\r\n                        break;\r\n                    case 'M':\r\n                        mx = +pa[1] + x;\r\n                        my = +pa[2] + y;\r\n                    default:\r\n                        for (j = 1, jj = pa.length; j < jj; j++) {\r\n                            r[j] = +pa[j] + ((j % 2) ? x : y);\r\n                        }\r\n                }\r\n            } else if (pa[0] == 'R') {\r\n                dots = [x, y][concat](pa.slice(1));\r\n                res.pop();\r\n                res = res[concat](catmullRom2bezier(dots, crz));\r\n                r = ['R'][concat](pa.slice(-2));\r\n            } else {\r\n                for (var k = 0, kk = pa.length; k < kk; k++) {\r\n                    r[k] = pa[k];\r\n                }\r\n            }\r\n            switch (r[0]) {\r\n                case 'Z':\r\n                    x = mx;\r\n                    y = my;\r\n                    break;\r\n                case 'H':\r\n                    x = r[1];\r\n                    break;\r\n                case 'V':\r\n                    y = r[1];\r\n                    break;\r\n                case 'M':\r\n                    mx = r[r.length - 2];\r\n                    my = r[r.length - 1];\r\n                default:\r\n                    x = r[r.length - 2];\r\n                    y = r[r.length - 1];\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n}\r\nexport class path2curve {\r\n    path2curveFunc(pathString, pathString2) {\r\n        if (typeof pathString === 'string' && !pathString2 && cache.string2curve[pathString]) {\r\n            return clone(cache.string2curve[pathString]);\r\n        }\r\n\r\n        var p = path2absolute.prototype.path2absoluteFunc(pathString),\r\n            p2 = pathString2 && path2absolute.prototype.path2absoluteFunc(pathString2),\r\n            attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n            attrs2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n            processPath = function (path, d, pcom) {\r\n                var nx, ny, tq = { T: 1, Q: 1 };\r\n                if (!path) {\r\n                    return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n                }\r\n                !(path[0] in tq) && (d.qx = d.qy = null);\r\n                switch (path[0]) {\r\n                    case 'M':\r\n                        d.X = path[1];\r\n                        d.Y = path[2];\r\n                        break;\r\n                    case 'A':\r\n                        path = ['C'][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\r\n                        break;\r\n                    case 'S':\r\n                        if (pcom == 'C' || pcom == 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\r\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\r\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\r\n                        }\r\n                        else {                            // or some else or nothing\r\n                            nx = d.x;\r\n                            ny = d.y;\r\n                        }\r\n                        path = ['C', nx, ny][concat](path.slice(1));\r\n                        break;\r\n                    case 'T':\r\n                        if (pcom == 'Q' || pcom == 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\r\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\r\n                            d.qy = d.y * 2 - d.qy;        // to case 'S'.\r\n                        }\r\n                        else {                            // or something else or nothing\r\n                            d.qx = d.x;\r\n                            d.qy = d.y;\r\n                        }\r\n                        path = ['C'][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n                        break;\r\n                    case 'Q':\r\n                        d.qx = path[1];\r\n                        d.qy = path[2];\r\n                        path = ['C'][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n                        break;\r\n                    case 'L':\r\n                        path = ['C'][concat](l2c(d.x, d.y, path[1], path[2]));\r\n                        break;\r\n                    case 'H':\r\n                        path = ['C'][concat](l2c(d.x, d.y, path[1], d.y));\r\n                        break;\r\n                    case 'V':\r\n                        path = ['C'][concat](l2c(d.x, d.y, d.x, path[1]));\r\n                        break;\r\n                    case 'Z':\r\n                        path = ['C'][concat](l2c(d.x, d.y, d.X, d.Y));\r\n                        break;\r\n                }\r\n                return path;\r\n            },\r\n            fixArc = function (pp, i) {\r\n                if (pp[i].length > 7) {\r\n                    pp[i].shift();\r\n                    let pi = pp[i];\r\n                    while (pi.length) {\r\n                        pcoms1[i] = 'A'; // if created multiple C:s, their original seg is saved\r\n                        p2 && (pcoms2[i] = 'A'); // the same as above\r\n                        pp.splice(i++, 0, ['C'][concat](pi.splice(0, 6)));\r\n                    }\r\n                    pp.splice(i, 1);\r\n                    ii = mmax(p.length, p2 && p2.length || 0);\r\n                }\r\n            },\r\n            fixM = function (path1, path2, a1, a2, i) {\r\n                if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\r\n                    path2.splice(i, 0, ['M', a2.x, a2.y]);\r\n                    a1.bx = 0;\r\n                    a1.by = 0;\r\n                    a1.x = path1[i][1];\r\n                    a1.y = path1[i][2];\r\n                    ii = mmax(p.length, p2 && p2.length || 0);\r\n                }\r\n            },\r\n            pcoms1 = [], // path commands of original path p\r\n            pcoms2 = [], // path commands of original path p2\r\n            pfirst = '', // temporary holder for original path command\r\n            pcom = ''; // holder for previous path command of original path\r\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\r\n            p[i] && (pfirst = p[i][0]); // save current path command\r\n\r\n            if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\r\n            {\r\n                pcoms1[i] = pfirst; // Save current path command\r\n                i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\r\n            }\r\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\r\n\r\n            if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\r\n            // which may produce multiple C:s\r\n            // so we have to make sure that C is also C in original path\r\n\r\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\r\n\r\n            if (p2) { // the same procedures is done to p2\r\n                p2[i] && (pfirst = p2[i][0]);\r\n                if (pfirst != 'C') {\r\n                    pcoms2[i] = pfirst;\r\n                    i && (pcom = pcoms2[i - 1]);\r\n                }\r\n                p2[i] = processPath(p2[i], attrs2, pcom);\r\n\r\n                if (pcoms2[i] != 'A' && pfirst == 'C') pcoms2[i] = 'C';\r\n\r\n                fixArc(p2, i);\r\n            }\r\n            fixM(p, p2, attrs, attrs2, i);\r\n            fixM(p2, p, attrs2, attrs, i);\r\n            let seg = p[i],\r\n                seg2 = p2 && p2[i],\r\n                seglen = seg.length,\r\n                seg2len = p2 && seg2.length;\r\n            attrs.x = seg[seglen - 2];\r\n            attrs.y = seg[seglen - 1];\r\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\r\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\r\n            attrs2.x = p2 && seg2[seg2len - 2];\r\n            attrs2.y = p2 && seg2[seg2len - 1];\r\n        }\r\n\r\n        if (typeof pathString === 'string' && !pathString2) {\r\n            cache.string2curve[pathString] = clone(p);\r\n        }\r\n\r\n        return p2 ? [p, p2] : p;\r\n    }\r\n\r\n}"]}