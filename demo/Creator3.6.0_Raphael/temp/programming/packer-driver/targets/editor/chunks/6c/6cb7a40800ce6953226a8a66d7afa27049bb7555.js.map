{"version":3,"sources":["file:///E:/cocos/cocos-awesome-tech-solutions/demo/Creator3.6.0_Raphael/assets/demo/nardove/jelly.ts"],"names":["_decorator","Component","Vec2","view","Color","misc","Tentacle","ccclass","property","colours","s","f","Jelly","pathSides","group","path","pathRadius","pathPoints","pathPointsNormals","location","velocity","acceleration","maxSpeed","maxTravelSpeed","maxForce","wanderTheta","numTentacles","startTentacles","tentacles","originalPoints","lastLocation","onLoad","init","id","addPath","Math","random","set","getVisibleSize","width","height","theta","PI","i","angle","x","cos","y","sin","point","_tempPoint","normalize","map","clone","points","smoothFunc","lineWidth","lineColor","fromHEX","fillColor","t","update","time","count","sep","length","position","orientation","atan2","rotation","radiansToDegrees","sineSeed","normalRotatedPoint","wander","checkBounds","anchor","steer","target","slowdown","desired","dist","divide2f","min","seek","wanderR","wanderD","change","circleLocation","_tempLocation","circleOffset","offset","visibleSize","getFrameSize"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec2, view, Color, misc } from 'cc';\r\nimport { Tentacle } from './tentacle';\r\nconst { ccclass, property } = _decorator;\r\n\r\nlet colours = [{s:'#1C4347', f:'#49ACBB'},\r\n               {s:'#1b3b3a', f:'#61cac8'},\r\n               {s:'#2d393f', f:'#88a5b3'},\r\n               {s:'#422b3a', f:'#b0809e'},\r\n               {s:'#5b263a', f:'#d85c8a'},\r\n               {s:'#580c23', f:'#ff3775'},\r\n               {s:'#681635', f:'#EB1962'}];\r\n@ccclass('Jelly')\r\nexport class Jelly extends Component {\r\n    public pathSides = 14;\r\n    group = null;\r\n    path = null;\r\n    pathRadius = null;\r\n    pathPoints = [];\r\n    pathPointsNormals = [];\r\n    location = new Vec2();\r\n    velocity = new Vec2();\r\n    acceleration = new Vec2();\r\n    maxSpeed = 0;\r\n    maxTravelSpeed = 0;\r\n    maxForce = 0.2;\r\n    wanderTheta = 0;\r\n    numTentacles = 0;\r\n    startTentacles = -1;\r\n    tentacles = [];\r\n    originalPoints = null;\r\n    lastLocation = null;\r\n    onLoad () {\r\n    }\r\n\r\n    init (group: any, id: any) {\r\n        this.group = group;\r\n        this.path = group.addPath();\r\n        this.pathRadius = Math.random() * 10 + 40;\r\n        this.pathPoints = [this.pathSides];\r\n        this.pathPointsNormals = [this.pathSides];\r\n        this.location.set(view.getVisibleSize().width/2, view.getVisibleSize().height/2);//cc.v2(-50, Math.random() * cc.winSize.height);\r\n        this.maxSpeed = Math.random() * 0.1 + 0.15;\r\n        this.maxTravelSpeed = this.maxSpeed * 3.5;\r\n        let theta = (Math.PI * 2) / this.pathSides;\r\n        for (let i = 0; i < this.pathSides; i++) {\r\n           let angle = theta * i;\r\n           let x = Math.cos(angle) * this.pathRadius * 0.7;\r\n           let y = Math.sin(angle) * this.pathRadius;\r\n           if (angle > Math.PI && angle < (Math.PI*2)) {\r\n               y -= Math.sin(angle) * (this.pathRadius * 0.6);\r\n               if (this.startTentacles === -1) {\r\n                   this.startTentacles = i;\r\n               }\r\n               this.numTentacles++;\r\n           }\r\n           let point = new Vec2(x, y);\r\n           let _tempPoint = new Vec2();\r\n           this.pathPoints[i] = point;\r\n           Vec2.normalize(_tempPoint, point)\r\n\r\n           this.pathPointsNormals[i] = _tempPoint;\r\n        }\r\n        this.originalPoints = this.pathPoints.map(function (point) {\r\n           return point.clone();\r\n        });\r\n        this.path.points(this.pathPoints, true);\r\n        this.path.smoothFunc();\r\n        this.path.lineWidth = 5;\r\n        this.path.lineColor = new Color().fromHEX(colours[id].s);\r\n        this.path.fillColor = new Color().fromHEX(colours[id].f);\r\n        this.tentacles = [];\r\n        for (var t = 0; t < this.numTentacles; t++) {\r\n           this.tentacles[t] = new Tentacle();\r\n           this.tentacles[t].init(group, 7, 4);\r\n           this.tentacles[t].path.lineColor = this.path.lineColor;\r\n           this.tentacles[t].path.lineWidth = this.path.lineWidth;\r\n        }\r\n    }\r\n\r\n    update (time: any, count: any) {\r\n        this.lastLocation = this.location.clone();\r\n        this.velocity.x += this.acceleration.x;\r\n        this.velocity.y += this.acceleration.y;\r\n        var sep = this.velocity.length() / this.maxTravelSpeed;\r\n        if (sep > 1) {\r\n           this.velocity.x /= sep;\r\n           this.velocity.y /= sep;\r\n        }\r\n        this.location.x += this.velocity.x;\r\n        this.location.y += this.velocity.y;\r\n        this.acceleration.x = this.acceleration.y = 0;\r\n        this.path.position = this.location.clone();\r\n        var orientation = -(Math.atan2(this.velocity.y, this.velocity.x) - Math.PI/2);\r\n        this.path.rotation = misc.radiansToDegrees(orientation);\r\n        for (let i = 0; i < this.pathSides; i++) {\r\n        //    var segmentPoint = this.pathPoints[i];\r\n           let sineSeed = -((count * this.maxSpeed) + (this.originalPoints[i].y * 0.0375));\r\n           let normalRotatedPoint = this.pathPointsNormals[i];\r\n           this.pathPoints[i].x += normalRotatedPoint.x * Math.sin(sineSeed);\r\n           this.pathPoints[i].y += normalRotatedPoint.y * Math.sin(sineSeed);\r\n        }\r\n        this.path.points(this.pathPoints, true);\r\n        this.path.smoothFunc();\r\n        this.wander();\r\n        this.checkBounds();\r\n        for (let t = 0; t < this.numTentacles; t++) {\r\n           this.tentacles[t].anchor.x = this.pathPoints[this.startTentacles+t].x;\r\n           this.tentacles[t].anchor.y = this.pathPoints[this.startTentacles+t].y;\r\n           this.tentacles[t].path.position = this.path.position;\r\n           this.tentacles[t].path.rotation = this.path.rotation;\r\n           this.tentacles[t].update();\r\n        }\r\n    }\r\n\r\n    steer (target: any, slowdown: any) {\r\n        var steer;\r\n        var desired = new Vec2(target.x - this.location.x, target.y - this.location.y);\r\n        var dist = desired.length();\r\n        if (dist > 0) {\r\n           if (slowdown && dist < 100) {\r\n               desired.divide2f((this.maxTravelSpeed) * (dist / 100) / dist,(this.maxTravelSpeed) * (dist / 100) / dist);\r\n           }\r\n           else {\r\n               desired.length = this.maxTravelSpeed;\r\n               desired.divide2f(this.maxTravelSpeed / dist,this.maxTravelSpeed / dist);\r\n           }\r\n           steer = new Vec2(desired.x - this.velocity.x, desired.y - this.velocity.y);\r\n           steer.length = Math.min(this.maxForce, steer.length());\r\n        }\r\n        else {\r\n           steer = new Vec2(0, 0);\r\n        }\r\n        return steer;\r\n    }\r\n\r\n    seek (target: any) {\r\n        var steer = this.steer(target, false);\r\n        this.acceleration.x += steer.x;\r\n        this.acceleration.y += steer.y;\r\n    }\r\n\r\n    wander () {\r\n        var wanderR = 5;\r\n        var wanderD = 100;\r\n        var change = 0.05;\r\n        this.wanderTheta += Math.random() * (change * 2) - change;\r\n        var circleLocation = this.velocity.clone();\r\n        let _tempLocation = new Vec2()\r\n        if (circleLocation.x !== 0 && circleLocation.y !== 0) {\r\n            Vec2.normalize(_tempLocation,circleLocation);\r\n           circleLocation = circleLocation.normalize();\r\n        }\r\n        circleLocation.x *= wanderD;\r\n        circleLocation.y *= wanderD;\r\n        circleLocation.x += this.location.x;\r\n        circleLocation.y += this.location.y;\r\n        var circleOffset = new Vec2(wanderR * Math.cos(this.wanderTheta), wanderR * Math.sin(this.wanderTheta));\r\n        var target = new Vec2(circleLocation.x + circleOffset.x, circleLocation.y + circleOffset.y);\r\n        this.seek(target);\r\n    }\r\n\r\n    checkBounds () {\r\n        let offset = 60;\r\n        let visibleSize = view.getFrameSize();\r\n        if (this.location.x < -offset) {\r\n           this.location.x = visibleSize.width + offset;\r\n        }\r\n        if (this.location.x > visibleSize.width + offset) {\r\n           this.location.x = -offset;\r\n        }\r\n        if (this.location.y < -offset) {\r\n           this.location.y = visibleSize.height + offset;\r\n        }\r\n        if (this.location.y > visibleSize.height + offset) {\r\n           this.location.y = -offset;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n"]}