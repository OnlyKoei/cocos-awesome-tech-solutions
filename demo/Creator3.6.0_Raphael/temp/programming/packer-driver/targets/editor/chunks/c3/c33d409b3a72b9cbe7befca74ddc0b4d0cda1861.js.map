{"version":3,"sources":["file:///E:/cocos/cocos-awesome-tech-solutions/demo/Creator3.6.0_Raphael/assets/raphael/RGroup.ts"],"names":["trim","s","replace","compressSpaces","toNumberArray","a","split","i","length","parseFloat","parseStyle","current","name","value","fillColor","Color","fromHEX","strokeColor","lineWidth","lineJoin","Graphics","LineJoin","toUpperCase","lineCap","LineCap","dashArray","dashOffset","parseNode","node","parent","tagName","addGroup","addPath","path","attribs","d","transform","data","type","position","Vec2","rotation","scale","styles","style","property","children","ii","child","_decorator","Component","Node","Rect","AffineTransform","error","RPath","ccclass","window","domhandler","prototype","_addDomElement","element","_tagStack","siblings","dom","previousSibling","next","_options","withStartIndices","startIndex","_parser","withDomLvl1","originElement","Object","create","Element","k","prev","push","RGroup","_children","_parent","_selected","_dirty","_ctx","_showBoundingBox","_transform","b","c","tx","ty","_worldTransform","_transformDirty","_scale","_position","_rotation","_flipX","_flipY","_lineWidth","_lineJoin","_lineCap","_strokeColor","_fillColor","_miterLimit","_dashOffset","_dashArray","selected","dirty","ctx","showBoundingBox","transformDirty","equals","flipX","flipY","MITER","BUTT","RED","WHITE","miterLimit","Array","isArray","_transformCommand","cmd","t","slice","tempPoint","j","x","y","transformVec2","getTransform","scaleX","scaleY","positionX","positionY","rotationRadians","Math","sin","cos","sx","sy","getWorldTransform","_tempForm","concat","updateTransform","parentTransformDirty","onLoad","init","_gNode","addComponent","addChild","group","getWorldBbox","rect","_tempRect","bbox","width","height","rectUnion","update","dt","clear","stroke","getStyled","undefined","getStyledColor","_applyStyle","loadSvg","string","text","$","cheerio","load","err","toString","svg"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Graphics,rect, Rect, Vec2, AffineTransform, Color,error } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { RPath } from './RPath';\r\nlet LineJoin = Graphics.LineJoin;\r\nlet LineCap = Graphics.LineCap;\r\nwindow.domhandler.prototype._addDomElement = function(element){\r\n    var parent = this._tagStack[this._tagStack.length - 1];\r\n    var siblings = parent ? parent.children : this.dom;\r\n    var previousSibling = siblings[siblings.length - 1];\r\n\r\n    element.next = null;\r\n\r\n    if(this._options.withStartIndices){\r\n        element.startIndex = this._parser.startIndex;\r\n    }\r\n\r\n    if (this._options.withDomLvl1) {\r\n\r\n        var originElement = element;\r\n        element = Object.create(element.type === \"tag\" ? Element : Node);\r\n        for (var k in originElement) {\r\n            element[k] = originElement[k];\r\n        }\r\n    }\r\n\r\n    if(previousSibling){\r\n        element.prev = previousSibling;\r\n        previousSibling.next = element;\r\n    } else {\r\n        element.prev = null;\r\n    }\r\n\r\n    siblings.push(element);\r\n    element.parent = parent || null;\r\n};\r\n// import  Cheerio  from \"cheerio\";\r\nfunction trim(s) {\r\n    return s.replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\nfunction compressSpaces(s) {\r\n    return s.replace(/[\\s\\r\\t\\n]+/gm, ' ');\r\n}\r\n\r\nfunction toNumberArray(s) {\r\n    var a = trim(compressSpaces((s || '').replace(/,/g, ' '))).split(' ');\r\n    for (var i = 0; i < a.length; i++) {\r\n        a[i] = parseFloat(a[i]);\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction parseStyle(current, name, value) {\r\n    if (name === 'fill') {\r\n        current.fillColor = value === 'none' ? null : new Color().fromHEX(value);\r\n    } else if (name === 'stroke') {\r\n        current.strokeColor = value === 'none' ? null : new Color().fromHEX(value);\r\n    } else if (name === 'stroke-width') {\r\n        current.lineWidth = parseFloat(value);\r\n    } else if (name === 'stroke-linejoin') {\r\n        current.lineJoin = Graphics.LineJoin[value.toUpperCase()];\r\n    } else if (name === 'stroke-linecap') {\r\n        current.lineCap = Graphics.LineCap[value.toUpperCase()];\r\n    } else if (name === 'stroke-dasharray') {\r\n        current.dashArray = toNumberArray[value];\r\n    } else if (name === 'stroke-dashoffset') {\r\n        current.dashOffset = parseFloat(value);\r\n    } /* else {\r\n        cc.log(\"Unhandled style: \" + name + \" -- \" + value);\r\n    } */\r\n}\r\n\r\nfunction parseNode(node, parent) {\r\n    var current;\r\n\r\n    var tagName = node.tagName;\r\n    if (tagName === 'g') {\r\n        current = parent.addGroup();\r\n    }\r\n    else if (tagName === 'path') {\r\n        current = parent.addPath();\r\n        current.path(node.attribs.d);\r\n    }\r\n\r\n    if (current && node.attribs) {\r\n        // transform\r\n        var transform = node.attribs.transform;\r\n        if (transform) {\r\n            var data = trim(compressSpaces(transform)).replace(/\\)([a-zA-Z])/g, ') $1').replace(/\\)(\\s?,\\s?)/g, ') ').split(/\\s(?=[a-z])/);\r\n            for (var i = 0; i < data.length; i++) {\r\n                var type = trim(data[i].split('(')[0]);\r\n                var s = data[i].split('(')[1].replace(')', '');\r\n                var a = toNumberArray(s);\r\n\r\n                if (type === 'translate') {\r\n                    current.position = new Vec2(a[0], a[1]);\r\n                }\r\n                else if (type === 'rotate') {\r\n                    current.rotation = a[0];\r\n                }\r\n                else if (type === 'scale') {\r\n                    current.scale = new Vec2(a[0], a[1]);\r\n                }\r\n            }\r\n        }\r\n\r\n        var styles = node.attribs.style;\r\n        if (styles) {\r\n            styles = styles.split(';');\r\n            for (var i = 0; i < styles.length; i++) {\r\n                if (trim(styles[i]) !== '') {\r\n                    var style = styles[i].split(':');\r\n                    var name = trim(style[0]);\r\n                    var value = trim(style[1]);\r\n\r\n                    parseStyle(current, name, value);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var property in node.attribs) {\r\n            if (node.attribs[property+'']) {\r\n                parseStyle(current, property, node.attribs[property]);\r\n            }\r\n        }\r\n    }\r\n\r\n    var children = node.children;\r\n    if (children) {\r\n        for (var i = 0, ii = children.length; i < ii; i++) {\r\n            var child = children[i];\r\n            parseNode(child, current || parent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@ccclass('RGroup')\r\nexport class RGroup extends Component {\r\n    // use this for initialization\r\n    private _children = [];\r\n    public get children() {\r\n        return this._children;\r\n    }\r\n    public set children(value) {\r\n        this._children = value;\r\n    }\r\n    private _parent = null;\r\n    public get parent() {\r\n        return this._parent;\r\n    }\r\n    public set parent(value) {\r\n        this._parent = value;\r\n    }\r\n\r\n    private _selected = false;\r\n    public get selected() {\r\n        return this._selected;\r\n    }\r\n    public set selected(value) {\r\n        var children = this.children;\r\n        this.selected = value;\r\n        for (var i = 0, ii = children.length; i < ii; i++) {\r\n            children[i].selected = value;\r\n        }\r\n    }\r\n    private _dirty = true;\r\n    public get dirty() {\r\n        return this._dirty;\r\n    }\r\n    public set dirty(value) {\r\n        this._dirty = value;\r\n    }\r\n    private _ctx = null;\r\n    public get ctx() {\r\n        return this._ctx;\r\n    }\r\n    public set ctx(value) {\r\n        this._ctx = value;\r\n    }\r\n    private _showBoundingBox = false;\r\n    public get showBoundingBox() {\r\n        return this._showBoundingBox;\r\n    }\r\n    public set showBoundingBox(value) {\r\n        this._showBoundingBox = value;\r\n    }\r\n    \r\n    //R.transform ->>>>>>>>>>>>>>\r\n    _transform = { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 };\r\n    _worldTransform: AffineTransform = { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 };\r\n    private _transformDirty = true;\r\n    public get transformDirty() {\r\n        return this._transformDirty;\r\n    }\r\n    public set transformDirty(value) {\r\n        if (value) {\r\n            // if (this.parent) {\r\n            //     this.parent._transformDirty = true;\r\n            // }\r\n\r\n            this._dirty = true;\r\n        }\r\n    }\r\n    private _scale: Vec2 = new Vec2(1, 1);\r\n    public get scale() {\r\n        return this._scale;\r\n    }\r\n    public set scale(value) {\r\n        if (this._scale.equals(value)) {\r\n            return;\r\n        }\r\n        this._scale = value;\r\n        this.transformDirty = true;\r\n    }\r\n\r\n    private _position: Vec2 = new Vec2(0, 0);\r\n    public get position() {\r\n        return this._position;\r\n    }\r\n    public set position(value) {\r\n        if (this._position.equals(value)) {\r\n            return;\r\n        }\r\n        this._position = value;\r\n        this.transformDirty = true;\r\n    }\r\n    private _rotation = 0;\r\n    public get rotation() {\r\n        return this._rotation;\r\n    }\r\n    public set rotation(value) {\r\n        if (this._rotation === value) {\r\n            return;\r\n        }\r\n        this._rotation = value;\r\n        this.transformDirty = true;\r\n    }\r\n    private _flipX = false;\r\n    public get flipX() {\r\n        return this._flipX;\r\n    }\r\n    public set flipX(value) {\r\n        if (this._flipX === value) {\r\n            return;\r\n        }\r\n        this._flipX = value;\r\n        this.transformDirty = true;\r\n    }\r\n    private _flipY=false;\r\n    public get flipY() {\r\n        return this._flipY;\r\n    }\r\n    public set flipY(value) {\r\n        if (this._flipY === value) {\r\n            return;\r\n        }\r\n        this._flipY = value;\r\n        this.transformDirty = true;\r\n    }\r\n    //R.transform ->>>>>>>>>>>>>>>>>>\r\n\r\n    //group\r\n    _lineWidth;\r\n    public get lineWidth() {\r\n        return this._lineWidth || 2;\r\n    }\r\n    public set lineWidth(value) {\r\n        this._lineWidth = value;\r\n        this._dirty = true;\r\n    }\r\n    private _lineJoin = null;\r\n    public get lineJoin() {\r\n        return this._lineJoin || LineJoin.MITER;\r\n    }\r\n    public set lineJoin(value) {\r\n        this._lineJoin = value;\r\n        this._dirty = true;\r\n    }\r\n    private _lineCap;\r\n    public get lineCap() {\r\n        return this._lineCap || LineCap.BUTT;\r\n    }\r\n    public set lineCap(value) {\r\n        this._lineCap = value;\r\n        this._dirty = true;\r\n    }\r\n    private _strokeColor;\r\n    public get strokeColor() {\r\n        return this._strokeColor || Color.RED;\r\n    }\r\n    public set strokeColor(value) {\r\n        this._strokeColor = value;\r\n        this._dirty = true;\r\n    }\r\n    private _fillColor;\r\n    public get fillColor() {\r\n        return this._fillColor || Color.WHITE;\r\n    }\r\n    public set fillColor(value) {\r\n        this._fillColor = value;\r\n        this._dirty = true;\r\n\r\n    }\r\n    private _miterLimit;\r\n    public get miterLimit() {\r\n        return this._miterLimit || 10;\r\n    }\r\n    public set miterLimit(value) {\r\n        this._miterLimit = value;\r\n        this._dirty = true;\r\n\r\n    }\r\n    private _dashOffset;\r\n    public get dashOffset() {\r\n        return this._dashOffset || 0;\r\n    }\r\n    public set dashOffset(value) {\r\n        if (this._dashOffset === value) {\r\n            return;\r\n        }\r\n        this._dashOffset = value;\r\n        this._dirty = true;\r\n\r\n    }\r\n    private _dashArray;\r\n    public get dashArray() {\r\n        return this._dashArray;\r\n    }\r\n    public set dashArray(value) {\r\n        if (!Array.isArray(value)) {\r\n            return;\r\n        }\r\n        this._dashArray = value;\r\n        this._dirty = true;\r\n\r\n    }\r\n\r\n\r\n    public _transformCommand(cmd, t) {\r\n        if (cmd.length <= 1) {\r\n            return cmd;\r\n        }\r\n\r\n        cmd = cmd.slice(1, cmd.length);\r\n\r\n        if (t.a === 1 && t.d === 1 &&\r\n            t.b === 0 && t.c === 0 &&\r\n            t.tx === 0 && t.ty === 0) {\r\n            return cmd;\r\n        }\r\n\r\n        var tempPoint = new Vec2();\r\n\r\n        for (var i = 0, ii = cmd.length / 2; i < ii; i++) {\r\n            var j = i * 2;\r\n            tempPoint.x = cmd[j];\r\n            tempPoint.y = cmd[j + 1];\r\n\r\n            tempPoint = AffineTransform.transformVec2(new Vec2(0, 0), tempPoint, t);\r\n\r\n            cmd[j] = tempPoint.x;\r\n            cmd[j + 1] = tempPoint.y;\r\n        }\r\n\r\n        return cmd;\r\n    }\r\n\r\n    getTransform() {\r\n        if (this.transformDirty) {\r\n            var scaleX = this.flipX ? -this._scale.x : this._scale.x;\r\n            var scaleY = this.flipY ? -this._scale.y : this._scale.y;\r\n            var positionX = this._position.x;\r\n            var positionY = this._position.y;\r\n            var rotation = this._rotation;\r\n\r\n            var t = this._transform;\r\n            t.tx = positionX;\r\n            t.ty = positionY;\r\n            t.a = t.d = 1;\r\n            t.b = t.c = 0;\r\n\r\n            // rotation Cos and Sin\r\n            if (rotation) {\r\n                var rotationRadians = rotation * 0.017453292519943295;  //0.017453292519943295 = (Math.PI / 180);   for performance\r\n                t.c = Math.sin(rotationRadians);\r\n                t.d = Math.cos(rotationRadians);\r\n                t.a = t.d;\r\n                t.b = -t.c;\r\n            }\r\n\r\n            // Firefox on Vista and XP crashes\r\n            // GPU thread in case of scale(0.0, 0.0)\r\n            var sx = (scaleX < 0.000001 && scaleX > -0.000001) ? 0.000001 : scaleX,\r\n                sy = (scaleY < 0.000001 && scaleY > -0.000001) ? 0.000001 : scaleY;\r\n\r\n            // scale\r\n            if (scaleX !== 1 || scaleY !== 1) {\r\n                t.a *= sx;\r\n                t.b *= sx;\r\n                t.c *= sy;\r\n                t.d *= sy;\r\n            }\r\n\r\n            this.transformDirty = false;\r\n        }\r\n\r\n        return this._transform;\r\n    }\r\n\r\n    getWorldTransform() {\r\n        if (this.parent) {\r\n            //@ts-ignore\r\n            let _tempForm = new AffineTransform()\r\n            AffineTransform.concat(_tempForm, this.parent.getWorldTransform(), this.getTransform());\r\n            return _tempForm;\r\n        }\r\n\r\n        return this.getTransform();\r\n    }\r\n\r\n    updateTransform(parentTransformDirty) {\r\n        if (this.transformDirty || parentTransformDirty) {\r\n            var scaleX = this.flipX ? -this._scale.x : this._scale.x;\r\n            var scaleY = this.flipY ? -this._scale.y : this._scale.y;\r\n            var positionX = this._position.x;\r\n            var positionY = this._position.y;\r\n            var rotation = this._rotation;\r\n\r\n            var t = this._transform;\r\n            t.tx = positionX;\r\n            t.ty = positionY;\r\n            t.a = t.d = 1;\r\n            t.b = t.c = 0;\r\n\r\n            // rotation Cos and Sin\r\n            if (rotation) {\r\n                var rotationRadians = rotation * 0.017453292519943295;  //0.017453292519943295 = (Math.PI / 180);   for performance\r\n                t.c = Math.sin(rotationRadians);\r\n                t.d = Math.cos(rotationRadians);\r\n                t.a = t.d;\r\n                t.b = -t.c;\r\n            }\r\n\r\n            // Firefox on Vista and XP crashes\r\n            // GPU thread in case of scale(0.0, 0.0)\r\n            var sx = (scaleX < 0.000001 && scaleX > -0.000001) ? 0.000001 : scaleX,\r\n                sy = (scaleY < 0.000001 && scaleY > -0.000001) ? 0.000001 : scaleY;\r\n\r\n            // scale\r\n            if (scaleX !== 1 || scaleY !== 1) {\r\n                t.a *= sx;\r\n                t.b *= sx;\r\n                t.c *= sy;\r\n                t.d *= sy;\r\n            }\r\n        }\r\n\r\n        if (this.parent) {\r\n            let _tempForm = new AffineTransform()\r\n            AffineTransform.concat(new AffineTransform(), this.parent._worldTransform, this._transform);\r\n            this._worldTransform = _tempForm;\r\n        }\r\n        else {\r\n            this._worldTransform = this._transform;\r\n        }\r\n\r\n        var children = this.children;\r\n        if (children) {\r\n            for (var i = 0, ii = children.length; i < ii; i++) {\r\n                var child = children[i];\r\n                child.updateTransform(parentTransformDirty || this.transformDirty);\r\n            }\r\n        }\r\n\r\n        this.transformDirty = false;\r\n    }\r\n    onLoad() {\r\n        this.init(null);\r\n        if (!this.ctx) {\r\n            let _gNode = new Node();\r\n            this.ctx = _gNode.addComponent(Graphics);\r\n            this.node.addChild(_gNode);\r\n        }\r\n    }\r\n\r\n    init(parent) {\r\n        this.children = [];\r\n\r\n        if (parent) {\r\n            this.parent = parent;\r\n            this.ctx = parent.ctx;\r\n        }\r\n\r\n        this.showBoundingBox = false;\r\n    }\r\n\r\n    addPath() {\r\n        var path = new RPath();\r\n        path.init(this);\r\n\r\n        this.children.push(path);\r\n        this._dirty = true;\r\n\r\n        return path;\r\n    }\r\n\r\n    addGroup() {\r\n        var group = new RGroup();\r\n        group.init(this);\r\n\r\n        this.children.push(group);\r\n        this._dirty = true;\r\n\r\n        return group;\r\n    }\r\n\r\n    getWorldBbox() {\r\n        let rect;\r\n        var children = this.children;\r\n        let _tempRect = new Rect();\r\n        for (var i = 0, ii = children.length; i < ii; i++) {\r\n            var bbox = children[i].getWorldBbox();\r\n\r\n            if (bbox.width !== 0 && bbox.height !== 0) {\r\n                if (!rect) {\r\n                    rect = children[i].getWorldBbox();\r\n                }\r\n                else {\r\n                    rect = rect.rectUnion(rect, children[i].getWorldBbox());\r\n                }\r\n            }\r\n        }\r\n\r\n        return rect || new Rect();\r\n    }\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update(dt) {\r\n\r\n        if (!this._dirty) return;\r\n\r\n        if (!this.parent) {\r\n            this.ctx.clear();\r\n        }\r\n\r\n        var children = this.children;\r\n        for (var i = 0, ii = children.length; i < ii; i++) {\r\n            var child = children[i];\r\n            child._dirty = true;\r\n            child.update(dt);\r\n        }\r\n\r\n        if (this.showBoundingBox) {\r\n            var bbox = this.getWorldBbox();\r\n            this.ctx.rect(bbox.x, bbox.y, bbox.width, bbox.height);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        this._dirty = false;\r\n    }\r\n\r\n\r\n    //style\r\n    public getStyled(type) {\r\n        var value = this['_' + type];\r\n\r\n        if (value === 'inherit' || value === undefined) {\r\n            if (this.parent) value = this.parent.getStyled(type);\r\n            else value = this[type];\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    public getStyledColor(type) {\r\n        var value = this.getStyled(type);\r\n\r\n        if (value === 'none' || !value) {\r\n            value = null;\r\n        }\r\n        else if (typeof value === 'string') {\r\n            value = new Color().fromHEX(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _applyStyle() {\r\n        let ctx = this.ctx;\r\n        ctx.lineWidth = this.getStyled('lineWidth');\r\n        ctx.lineJoin = this.getStyled('lineJoin');\r\n        ctx.lineCap = this.getStyled('lineCap');\r\n\r\n        let strokeColor = this.getStyledColor('strokeColor');\r\n        let fillColor = this.getStyledColor('fillColor');\r\n\r\n        if (strokeColor)\r\n            ctx.strokeColor = strokeColor;\r\n        if (fillColor)\r\n            ctx.fillColor = fillColor;\r\n    }\r\n\r\n    //svg\r\n    loadSvg(string){\r\n        if (typeof string.text !== \"string\") {\r\n            return;\r\n        }\r\n\r\n        var $;\r\n        try {\r\n            $ = window.cheerio.load(string.text);\r\n        }\r\n        catch (err) {\r\n            error(err.toString());\r\n            return;\r\n        }\r\n\r\n        var svg = $('svg')[0];\r\n        parseNode(svg, this);\r\n\r\n        this.flipY = true;\r\n    }\r\n}\r\n\r\n\r\n"]}